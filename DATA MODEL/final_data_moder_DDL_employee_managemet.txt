-- ========================================
-- 1. Create tables (Oracle SQL with IDENTITY columns)
-- ========================================

CREATE TABLE vuta_department (
  department_id   NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
  dept_name       VARCHAR2(100),
  manager_id      NUMBER
);

CREATE TABLE vuta_employee (
  employee_id     NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
  first_name      VARCHAR2(50),
  last_name       VARCHAR2(50),
  birth_date      DATE,
  hire_date       DATE,
  department_id   NUMBER,
  position        VARCHAR2(100),
  email           VARCHAR2(100),
  phone           VARCHAR2(20),
  payment_type    VARCHAR2(20) DEFAULT 'SHIFT',
  updated_at      TIMESTAMP DEFAULT SYSTIMESTAMP
);

CREATE TABLE vuta_shift_type (
  shift_type_id   NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
  shift_name      VARCHAR2(50),
  start_time      DATE,           -- Oracle DATE includes time component
  end_time        DATE,
  base_rate       NUMBER(10,2)
);

CREATE TABLE vuta_employee_shift (
  employee_shift_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
  employee_id       NUMBER,
  shift_type_id     NUMBER,
  shift_date        DATE,
  actual_start      TIMESTAMP,
  actual_end        TIMESTAMP,
  hours_worked      NUMBER(5,2),
  rate_applied      NUMBER(10,2),
  amount            NUMBER(12,2)
);

CREATE TABLE vuta_payroll_period (
  payroll_period_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
  period_start      DATE,
  period_end        DATE,
  paid_date         DATE,
  status            VARCHAR2(20) DEFAULT 'Open'
);

CREATE TABLE vuta_payroll (
  payroll_id         NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
  employee_id        NUMBER,
  payroll_period_id  NUMBER,
  total_hours        NUMBER(7,2),
  gross_pay          NUMBER(12,2),
  tax_amount         NUMBER(12,2),
  other_deductions   NUMBER(12,2),
  net_pay            NUMBER(12,2)
);

CREATE TABLE vuta_payroll_detail (
  payroll_detail_id  NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
  payroll_id         NUMBER,
  employee_shift_id  NUMBER,
  hours              NUMBER(5,2),
  rate               NUMBER(10,2),
  amount             NUMBER(12,2)
);

CREATE TABLE vuta_contract_salary (
  contract_salary_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
  employee_id        NUMBER,
  salary_amount      NUMBER(12,2),
  salary_freq        VARCHAR2(20),
  start_date         DATE,
  end_date           DATE
);

CREATE TABLE vuta_payroll_contract_detail (
  payroll_contract_detail_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
  payroll_id                 NUMBER,
  contract_salary_id         NUMBER,
  amount                     NUMBER(12,2)
);


-- ========================================
-- 2. Add all constraints via ALTER TABLE
-- ========================================

-- vuta_department
ALTER TABLE vuta_department
  ADD CONSTRAINT pk_vuta_department
    PRIMARY KEY(department_id);

ALTER TABLE vuta_department
  ADD CONSTRAINT uq_vuta_department_dept_name
    UNIQUE(dept_name);

ALTER TABLE vuta_department
  ADD CONSTRAINT fk_vuta_department_manager
    FOREIGN KEY(manager_id)
    REFERENCES vuta_employee(employee_id);

-- vuta_employee
ALTER TABLE vuta_employee
  ADD CONSTRAINT pk_vuta_employee
    PRIMARY KEY(employee_id);

ALTER TABLE vuta_employee
  ADD CONSTRAINT uq_vuta_employee_email
    UNIQUE(email);

ALTER TABLE vuta_employee
  ADD CONSTRAINT ck_vuta_employee_payment_type
    CHECK(payment_type IN ('SHIFT','CONTRACT','HYBRID'));

ALTER TABLE vuta_employee
  ADD CONSTRAINT fk_vuta_employee_department
    FOREIGN KEY(department_id)
    REFERENCES vuta_department(department_id);

-- vuta_shift_type
ALTER TABLE vuta_shift_type
  ADD CONSTRAINT pk_vuta_shift_type
    PRIMARY KEY(shift_type_id);

-- vuta_employee_shift
ALTER TABLE vuta_employee_shift
  ADD CONSTRAINT pk_vuta_employee_shift
    PRIMARY KEY(employee_shift_id);

ALTER TABLE vuta_employee_shift
  ADD CONSTRAINT fk_vuta_emp_shift_employee
    FOREIGN KEY(employee_id)
    REFERENCES vuta_employee(employee_id);

ALTER TABLE vuta_employee_shift
  ADD CONSTRAINT fk_vuta_emp_shift_type
    FOREIGN KEY(shift_type_id)
    REFERENCES vuta_shift_type(shift_type_id);

-- vuta_payroll_period
ALTER TABLE vuta_payroll_period
  ADD CONSTRAINT pk_vuta_payroll_period
    PRIMARY KEY(payroll_period_id);

-- vuta_payroll
ALTER TABLE vuta_payroll
  ADD CONSTRAINT pk_vuta_payroll
    PRIMARY KEY(payroll_id);

ALTER TABLE vuta_payroll
  ADD CONSTRAINT fk_vuta_payroll_employee
    FOREIGN KEY(employee_id)
    REFERENCES vuta_employee(employee_id);

ALTER TABLE vuta_payroll
  ADD CONSTRAINT fk_vuta_payroll_period
    FOREIGN KEY(payroll_period_id)
    REFERENCES vuta_payroll_period(payroll_period_id);

ALTER TABLE vuta_payroll
  ADD CONSTRAINT uq_vuta_payroll_emp_period
    UNIQUE(employee_id, payroll_period_id);

-- vuta_payroll_detail
ALTER TABLE vuta_payroll_detail
  ADD CONSTRAINT pk_vuta_payroll_detail
    PRIMARY KEY(payroll_detail_id);

ALTER TABLE vuta_payroll_detail
  ADD CONSTRAINT fk_vuta_payroll_detail_payroll
    FOREIGN KEY(payroll_id)
    REFERENCES vuta_payroll(payroll_id);

ALTER TABLE vuta_payroll_detail
  ADD CONSTRAINT fk_vuta_payroll_detail_emp_shift
    FOREIGN KEY(employee_shift_id)
    REFERENCES vuta_employee_shift(employee_shift_id);

-- vuta_contract_salary
ALTER TABLE vuta_contract_salary
  ADD CONSTRAINT pk_vuta_contract_salary
    PRIMARY KEY(contract_salary_id);

ALTER TABLE vuta_contract_salary
  ADD CONSTRAINT fk_vuta_contract_salary_employee
    FOREIGN KEY(employee_id)
    REFERENCES vuta_employee(employee_id)
    ON DELETE CASCADE;

ALTER TABLE vuta_contract_salary
  ADD CONSTRAINT ck_vuta_contract_salary_freq
    CHECK(salary_freq IN ('MONTHLY','WEEKLY','ANNUAL'));

-- vuta_payroll_contract_detail
ALTER TABLE vuta_payroll_contract_detail
  ADD CONSTRAINT pk_vuta_payroll_contract_detail
    PRIMARY KEY(payroll_contract_detail_id);

ALTER TABLE vuta_payroll_contract_detail
  ADD CONSTRAINT fk_vuta_payroll_contract_detail_payroll
    FOREIGN KEY(payroll_id)
    REFERENCES vuta_payroll(payroll_id)
    ON DELETE CASCADE;

ALTER TABLE vuta_payroll_contract_detail
  ADD CONSTRAINT fk_vuta_payroll_contract_detail_contract
    FOREIGN KEY(contract_salary_id)
    REFERENCES vuta_contract_salary(contract_salary_id);
